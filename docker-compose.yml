version: "3.9"

networks:
  backend:
    name: "${APP_NAME}_network"

services:
  nginx:
    image: "nginx:${NGINX_IMAGE}"
    container_name: "${APP_NAME}_webserver"
    ports:
      - "${NGINX_PORT}:80"
    volumes:
      - ./src:/var/www/html
      - ./.docker/nginx:/etc/nginx/conf.d
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - wordpress
      - mysql
    networks:
      - backend

  wordpress:
    container_name: "${APP_NAME}_wordpress"
    build:
      context: .
      args:
        - PHP_VERSION=${PHP_VERSION}
        - WORDPRESS_VERSION=${WORDPRESS_VERSION}
      dockerfile: .docker/php/Dockerfile
    volumes:
      - ./src:/var/www/html
    environment:
      - WORDPRESS_DB_NAME=${MYSQL_DATABASE}
      - WORDPRESS_TABLE_PREFIX=wp_
      - WORDPRESS_DB_HOST=mysql
      - WORDPRESS_DB_PASSWORD=${MYSQL_ROOT_PASSWORD}
    ports:
      - "${PHP_PORT}:9000"
    networks:
      - backend

  mysql:
    image: "mysql:${MYSQL_VERSION}"
    container_name: "${APP_NAME}_db_mysql"
    restart: unless-stopped
    tty: true
    ports:
      - "${MYSQL_PORT}:3306"
    volumes:
      - ./data/mysql:/var/lib/mysql
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    networks:
      - backend